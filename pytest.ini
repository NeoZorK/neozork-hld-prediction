[tool:pytest]
# Pytest configuration for NeoZorK HLD Prediction project

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Markers - register all custom markers
markers =
    unit: Unit tests for individual functions
    integration: Integration tests for component interaction
    performance: Performance and stress tests
    cli: Command line interface tests
    data: Data processing and validation tests
    indicators: Technical indicator calculation tests
    export: Data export functionality tests
    plotting: Visualization and plotting tests
    docker: Docker-specific tests
    native_container: Native container-specific tests
    slow: marks tests as slow (deselect with '-m "not slow"')
    basic: Basic functionality tests
    flag_combinations: Flag combination tests
    error: Error handling tests

# Output
addopts = 
    -v
    --tb=short
    --disable-warnings
    --color=yes
    -n auto
    --dist=worksteal
    --max-worker-restart=5
    --maxfail=10
    --timeout=30
    -W ignore

# Filter warnings
filterwarnings =
    # General warnings - suppress all warnings
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning
    ignore::FutureWarning
    ignore::RuntimeWarning
    ignore::PerformanceWarning
    ignore::SettingWithCopyWarning
    ignore::InterpolationWarning
    
    # Matplotlib warnings
    ignore::matplotlib.cbook.MatplotlibDeprecationWarning
    ignore:FigureCanvasAgg is non-interactive, and thus cannot be shown:UserWarning
    ignore:No artists with labels found to put in legend:UserWarning
    ignore:FigureCanvasAgg is non-interactive, and thus cannot be shown:UserWarning:matplotlib
    ignore:FigureCanvasAgg is non-interactive, and thus cannot be shown:UserWarning:mplfinance
    ignore::UserWarning:mplfinance
    
    # Seaborn warnings
    ignore:vert: bool will be deprecated:seaborn.categorical
    ignore:vert: bool will be deprecated:PendingDeprecationWarning
    ignore:vert: bool will be deprecated in a future version:PendingDeprecationWarning
    ignore::PendingDeprecationWarning:seaborn
    
    # Websockets warnings
    ignore:websockets.client.connect is deprecated:DeprecationWarning
    ignore:websockets.legacy is deprecated:DeprecationWarning
    ignore:websockets.client.WebSocketClientProtocol is deprecated:DeprecationWarning
    ignore:websockets.legacy is deprecated; see https://websockets.readthedocs.io/en/stable/howto/upgrade.html for upgrade instructions:DeprecationWarning
    ignore::DeprecationWarning:websockets
    ignore::DeprecationWarning:polygon
    
    # Statsmodels warnings
    ignore:Non-stationary starting autoregressive parameters found:UserWarning
    ignore:Non-invertible starting MA parameters found:UserWarning
    ignore:The test statistic is outside of the range of p-values available in the:InterpolationWarning
    ignore:Non-stationary starting autoregressive parameters found. Using zeros as starting parameters:UserWarning
    ignore:Non-invertible starting MA parameters found. Using zeros as starting parameters:UserWarning
    ignore::UserWarning:statsmodels
    
    # Numpy warnings
    ignore:invalid value encountered in divide:RuntimeWarning
    
    # Scipy warnings
    ignore:The test statistic is outside of the range of p-values available in the:InterpolationWarning
    ignore:The test statistic is outside of the range of p-values available in the look-up table:InterpolationWarning
    ignore::InterpolationWarning
    
    # Pandas warnings
    ignore:Series.__getitem__ treating keys as positions is deprecated:FutureWarning
    
    # Pytest warnings
    ignore::pytest.PytestUnknownMarkWarning
    ignore:Unknown pytest.mark.basic - is this a typo?:pytest.PytestUnknownMarkWarning
    ignore:Unknown pytest.mark.flag_combinations - is this a typo?:pytest.PytestUnknownMarkWarning
    ignore:Unknown pytest.mark.error - is this a typo?:pytest.PytestUnknownMarkWarning
    ignore:Unknown pytest.mark.slow - is this a typo?:pytest.PytestUnknownMarkWarning

# Environment-specific test filtering
# To run only non-Docker tests: pytest -m "not docker"
# To run only Docker tests: pytest -m "docker"
# To run only native container tests: pytest -m "native_container"

# Xdist configuration for better multiprocessing
xdist_auto_mode = auto
xdist_rsyncdir = src
xdist_rsyncignore = .git .pytest_cache __pycache__ *.pyc 