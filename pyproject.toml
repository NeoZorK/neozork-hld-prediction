[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "neozork-hld-prediction"
version = "0.5.3"
description = "A comprehensive financial analysis and prediction system for high-level decision making"
authors = [
    {name = "Neozork Team", email = "team@neozork.com"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Financial and Insurance Industry",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business :: Financial :: Investment",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
keywords = ["finance", "trading", "machine-learning", "technical-analysis", "prediction", "financial-analysis"]
dependencies = [
    "pandas>=1.5.0",
    "numpy>=1.21.0",
    "scikit-learn>=1.1.0",
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
    "plotly>=5.0.0",
    "mplfinance>=0.12.0",
    "scipy>=1.9.0",
    "statsmodels>=0.13.0",
    "ta-lib>=0.4.0",
    "yfinance>=0.1.87",
    "requests>=2.28.0",
    "aiohttp>=3.8.0",
    "asyncio>=3.4.3",
    "joblib>=1.2.0",
    "pyyaml>=6.0",
    "click>=8.1.0",
    "rich>=12.0.0",
    "tqdm>=4.64.0",
    "python-dotenv>=0.19.0",
    "pydantic>=1.10.0",
    "colorama>=0.4.0",
    "plotext>=5.0.0",
    "bokeh>=2.4.0",
    "dask>=2022.11.0",
    "pyarrow>=10.0.0",
    "psutil>=5.9.0",
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-xdist>=2.5.0",
    "pytest-mock>=3.8.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=0.991",
    "isort>=5.10.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-xdist>=2.5.0",
    "pytest-mock>=3.8.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=0.991",
    "isort>=5.10.0",
    "pre-commit>=2.20.0",
    "tox>=3.27.0",
]
ml = [
    "xgboost>=1.6.0",
    "lightgbm>=3.3.0",
    "tensorflow>=2.10.0",
    "torch>=1.12.0",
    "optuna>=3.0.0",
    "mlflow>=1.28.0",
]
data = [
    "polars>=0.17.0",
    "dask>=2022.11.0",
    "vaex>=4.13.0",
    "modin>=0.20.0",
]
visualization = [
    "bokeh>=2.4.0",
    "altair>=4.2.0",
    "plotly>=5.0.0",
    "kaleido>=0.2.1",
]
database = [
    "sqlalchemy>=1.4.0",
    "psycopg2-binary>=2.9.0",
    "pymongo>=4.2.0",
    "redis>=4.3.0",
]
api = [
    "fastapi>=0.85.0",
    "uvicorn>=0.18.0",
    "pydantic>=1.10.0",
    "httpx>=0.23.0",
]

[project.urls]
Homepage = "https://github.com/neozork/neozork-hld-prediction"
Documentation = "https://neozork-hld-prediction.readthedocs.io"
Repository = "https://github.com/neozork/neozork-hld-prediction.git"
"Bug Tracker" = "https://github.com/neozork/neozork-hld-prediction/issues"
"Source Code" = "https://github.com/neozork/neozork-hld-prediction"

[project.scripts]
neozork = "src.cli.core.cli:main"

[tool.setuptools.packages.find]
where = ["src"]
include = ["*"]

[tool.setuptools.package-data]
"*" = ["*.json", "*.yaml", "*.yml", "*.toml"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["src"]
known_third_party = ["pandas", "numpy", "matplotlib", "seaborn", "sklearn"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "pandas.*",
    "numpy.*",
    "matplotlib.*",
    "seaborn.*",
    "sklearn.*",
    "yfinance.*",
    "ta_lib.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--disable-warnings",
    "--tb=short",
    "--cov=src",
    "--cov-report=html",
    "--cov-report=term",
    "-n=auto",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "performance: Performance tests",
    "slow: Slow running tests",
    "cli: CLI specific tests",
    "ml: Machine learning tests",
    "data: Data handling tests",
    "analysis: Analysis tests",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
    "ignore::UserWarning",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
    "*/migrations/*",
    "*/migrations/*",
    "setup.py",
    "conftest.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
    "raise ImportError",
    "except ImportError:",
]

[tool.coverage.html]
directory = "htmlcov"

[tool.coverage.xml]
output = "coverage.xml"

[tool.pytest-cov]
cov_report = ["html", "term", "xml"]
cov_fail_under = 80

[tool.ruff]
target-version = "py38"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*.py" = ["B011"]

# Pre-commit configuration moved to .pre-commit-config.yaml

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py38, py39, py310, py311, py312
isolated_build = True

[testenv]
deps =
    pytest>=7.0.0
    pytest-cov>=4.0.0
    pytest-xdist>=2.5.0
    pytest-mock>=3.8.0
commands =
    pytest tests/ -v --cov=src --cov-report=term-missing
"""
