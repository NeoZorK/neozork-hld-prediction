name: Phase 1 CI/CD Pipeline (Basic)

on:
  push:
    branches: [ main, develop, v0.5.3-eda ]
  pull_request:
    branches: [ main, develop ]

env:
  PYTHON_VERSION: '3.11'

jobs:
  # Basic Validation
  basic-validation:
    name: Basic Validation
    runs-on: ubuntu-latest
    timeout-minutes: 3
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install UV
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
          source $HOME/.cargo/env

      - name: Install basic dependencies
        run: |
          uv pip install pandas numpy requests

      - name: Test Python environment
        run: |
          echo "🐍 Testing Python environment..."
          python --version
          uv --version
          echo "✅ Python environment is working"

      - name: Test basic imports
        run: |
          echo "📦 Testing basic imports..."
          python -c "
          import pandas as pd
          import numpy as np
          import requests
          print('✅ All basic imports successful')
          "

      - name: Test file structure
        run: |
          echo "📁 Testing file structure..."
          test -f requirements.txt && echo "✅ requirements.txt exists"
          test -d src/ && echo "✅ src/ directory exists"
          test -d tests/ && echo "✅ tests/ directory exists"
          echo "✅ File structure is valid"

  # Success Notification
  notify:
    name: Notify Success
    runs-on: ubuntu-latest
    needs: [basic-validation]
    if: always()
    timeout-minutes: 1
    steps:
      - name: Notify success
        if: needs.basic-validation.result == 'success'
        run: |
          echo "🎉 Phase 1 CI/CD Pipeline completed successfully!"
          echo "✅ Basic validation passed."
          echo "🚀 System is ready!"

      - name: Notify failure
        if: needs.basic-validation.result == 'failure'
        run: |
          echo "💥 Phase 1 CI/CD Pipeline failed!"
          echo "❌ Please check the logs for details."
          echo "🔧 Fix the issues and try again."
