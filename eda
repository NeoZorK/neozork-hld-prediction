#!/usr/bin/env bash
# -*- coding: utf-8 -*-
# EDA (Exploratory Data Analysis) Script
# 
# This script provides various data analysis and quality check tools
# for the Neozork HLD Prediction project.

# Get the directory where this script is located
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
# Fix: PROJECT_ROOT should be the same as SCRIPT_DIR since the script is in project root
PROJECT_ROOT="$SCRIPT_DIR"

# Add project root to Python path
export PYTHONPATH="${PROJECT_ROOT}:${PYTHONPATH}"

# Function to detect environment
detect_environment() {
    if [ -f "/.dockerenv" ] || [ -f "/app/.dockerenv" ]; then
        echo "Docker environment detected"
        return 0
    elif command -v uv >/dev/null 2>&1; then
        echo "UV environment detected"
        return 1
    else
        echo "Native Python environment detected"
        return 2
    fi
}

# Function to run Python command
run_python() {
    local env_type=$1
    shift
    
    case $env_type in
        0)  # Docker
            python "$@"
            ;;
        1)  # UV
            uv run python "$@"
            ;;
        2)  # Native
            python "$@"
            ;;
    esac
}

# Main script logic
echo "EDA Batch Check Tool"
echo "===================="

# Detect environment
detect_environment
env_type=$?

# Change to project root
cd "$PROJECT_ROOT"

# Add script directory to PATH
echo "Adding $SCRIPT_DIR to PATH"
export PATH="$SCRIPT_DIR:$PATH"

# Parse arguments
if [ $# -eq 0 ] || [ "$1" = "--help" ] || [ "$1" = "-h" ]; then
    echo "Usage: $0 [OPTIONS]"
    echo ""
    echo "Options:"
    echo "  --help                    Show this help message"
    echo "  --data-quality-checks     Run data quality checks"
    echo "  --nan-check              Check for NaN values in data"
    echo "  --fix-files              Fix common file issues"
    echo "  --folder-stats           Show folder statistics"
    echo "  --file-info              Show file information"
    echo "  --version                Show version information"
    echo ""
    echo "Environment:"
    echo "  Automatically detects Docker, UV, or native Python environment"
    echo ""
    exit 0
fi

# Handle all arguments by passing them to eda_batch_check.py
if [ $# -gt 0 ]; then
    echo "Running EDA batch check with arguments: $@"
    run_python $env_type src/eda/eda_batch_check.py "$@"
else
    echo "No arguments provided. Use --help for usage information."
    exit 1
fi

exit 0
