#!/usr/bin/env python3
"""
–°–æ–∑–¥–∞–Ω–∏–µ PDF —Å –ø–æ–º–æ—â—å—é Python –±–∏–±–ª–∏–æ—Ç–µ–∫
–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± —Å–æ–∑–¥–∞–Ω–∏—è PDF

–ê–≤—Ç–æ—Ä: NeoZorK (Shcherbyna Rostyslav)
–î–∞—Ç–∞: 2025
"""

import os
import subprocess
import sys
from pathlib import Path

def install_pdfkit():
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ pdfkit –µ—Å–ª–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"""
    try:
        import pdfkit
        return True
    except ImportError:
        print("üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º pdfkit...")
        subprocess.run([sys.executable, '-m', 'pip', 'install', 'pdfkit'], check=True)
        try:
            import pdfkit
            return True
        except ImportError:
            print("‚úó –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å pdfkit")
            return False

def create_pdf_with_pdfkit():
    """–°–æ–∑–¥–∞–Ω–∏–µ PDF —Å –ø–æ–º–æ—â—å—é pdfkit"""
    
    print("=== –°–æ–∑–¥–∞–Ω–∏–µ PDF —Å pdfkit ===")
    
    if not install_pdfkit():
        return False
    
    import pdfkit
    
    # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø—É—Ç–µ–π
    project_root = Path(__file__).parent.parent.parent.parent.parent
    docs_dir = project_root / "docs" / "automl" / "gluon"
    
    html_file = docs_dir / "AutoML_Gluon_Complete_Manual_Enhanced.html"
    pdf_file = docs_dir / "AutoML_Gluon_Complete_Manual.pdf"
    
    print(f"HTML —Ñ–∞–π–ª: {html_file}")
    print(f"PDF —Ñ–∞–π–ª: {pdf_file}")
    
    if not html_file.exists():
        print(f"‚úó HTML —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {html_file}")
        return False
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è PDF
    options = {
        'page-size': 'A4',
        'margin-top': '1in',
        'margin-right': '1in',
        'margin-bottom': '1in',
        'margin-left': '1in',
        'encoding': "UTF-8",
        'no-outline': None,
        'enable-local-file-access': None,
        'print-media-type': None,
        'disable-smart-shrinking': None
    }
    
    try:
        print("üîÑ –°–æ–∑–¥–∞–Ω–∏–µ PDF...")
        pdfkit.from_file(str(html_file), str(pdf_file), options=options)
        print("‚úÖ PDF —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
        print(f"üìÑ –§–∞–π–ª: {pdf_file}")
        return True
    except Exception as e:
        print(f"‚úó –û—à–∏–±–∫–∞: {e}")
        return False

def create_pdf_with_reportlab():
    """–°–æ–∑–¥–∞–Ω–∏–µ PDF —Å –ø–æ–º–æ—â—å—é ReportLab"""
    
    print("\n=== –°–æ–∑–¥–∞–Ω–∏–µ PDF —Å ReportLab ===")
    
    try:
        from reportlab.lib.pagesizes import A4
        from reportlab.platypus import SimpleDocTemplate, Paragraph, Spacer
        from reportlab.lib.styles import getSampleStyleSheet
        from reportlab.lib.units import inch
    except ImportError:
        print("üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º ReportLab...")
        subprocess.run([sys.executable, '-m', 'pip', 'install', 'reportlab'], check=True)
        try:
            from reportlab.lib.pagesizes import A4
            from reportlab.platypus import SimpleDocTemplate, Paragraph, Spacer
            from reportlab.lib.styles import getSampleStyleSheet
            from reportlab.lib.units import inch
        except ImportError:
            print("‚úó –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å ReportLab")
            return False
    
    # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø—É—Ç–µ–π
    project_root = Path(__file__).parent.parent.parent.parent.parent
    docs_dir = project_root / "docs" / "automl" / "gluon"
    
    pdf_file = docs_dir / "AutoML_Gluon_Complete_Manual_ReportLab.pdf"
    
    print(f"PDF —Ñ–∞–π–ª: {pdf_file}")
    
    try:
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π PDF
        doc = SimpleDocTemplate(str(pdf_file), pagesize=A4)
        styles = getSampleStyleSheet()
        story = []
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        title = Paragraph("AutoML Gluon - –ü–æ–ª–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", styles['Title'])
        story.append(title)
        story.append(Spacer(1, 12))
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–≤—Ç–æ—Ä–µ
        author_info = Paragraph(
            "<b>–ê–≤—Ç–æ—Ä:</b> NeoZorK (Shcherbyna Rostyslav)<br/>"
            "<b>–î–∞—Ç–∞:</b> 2025<br/>"
            "<b>–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ:</b> Ukraine, Zaporizhzhya<br/>"
            "<b>–í–µ—Ä—Å–∏—è:</b> 1.0",
            styles['Normal']
        )
        story.append(author_info)
        story.append(Spacer(1, 20))
        
        # –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ
        toc = Paragraph(
            "<b>–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ:</b><br/>"
            "1. –í–≤–µ–¥–µ–Ω–∏–µ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞<br/>"
            "2. –ë–∞–∑–æ–≤–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ<br/>"
            "3. –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è<br/>"
            "4. –ú–µ—Ç—Ä–∏–∫–∏ –∏ –æ—Ü–µ–Ω–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞<br/>"
            "5. –í–∞–ª–∏–¥–∞—Ü–∏—è –º–æ–¥–µ–ª–µ–π<br/>"
            "6. –ü—Ä–æ–¥–∞–∫—à–µ–Ω –∏ –¥–µ–ø–ª–æ–π<br/>"
            "7. –ü–µ—Ä–µ–æ–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–µ–π<br/>"
            "8. –õ—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏<br/>"
            "9. –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è<br/>"
            "10. Troubleshooting<br/>"
            "11. –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–ª—è Apple Silicon<br/>"
            "12. –ü—Ä–æ—Å—Ç–æ–π –ø—Ä–∏–º–µ—Ä –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞<br/>"
            "13. –°–ª–æ–∂–Ω—ã–π –ø—Ä–∏–º–µ—Ä –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞<br/>"
            "14. –¢–µ–æ—Ä–∏—è –∏ –æ—Å–Ω–æ–≤—ã AutoML<br/>"
            "15. –ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä—É–µ–º–æ—Å—Ç—å –∏ –æ–±—ä—è—Å–Ω–∏–º–æ—Å—Ç—å<br/>"
            "16. –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ —Ç–µ–º—ã<br/>"
            "17. –≠—Ç–∏–∫–∞ –∏ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π AI<br/>"
            "18. –ö–µ–π—Å-—Å—Ç–∞–¥–∏<br/>"
            "19. WAVE2 –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä - –ü–æ–ª–Ω—ã–π –∞–Ω–∞–ª–∏–∑<br/>"
            "20. SCHR Levels - –ê–Ω–∞–ª–∏–∑ –∏ ML-–º–æ–¥–µ–ª—å<br/>"
            "21. SCHR SHORT3 - –ö—Ä–∞—Ç–∫–æ—Å—Ä–æ—á–Ω–∞—è —Ç–æ—Ä–≥–æ–≤–ª—è<br/>"
            "22. –°—É–ø–µ—Ä-—Å–∏—Å—Ç–µ–º–∞: –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤<br/>"
            "23. –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –∏–∑—É—á–µ–Ω–∏—é —É—á–µ–±–Ω–∏–∫–∞<br/>"
            "24. –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–µ–π<br/>"
            "25. –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –±–æ—Ç–∞ - –õ—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏",
            styles['Normal']
        )
        story.append(toc)
        
        # –°–æ–∑–¥–∞–µ–º PDF
        doc.build(story)
        print("‚úÖ PDF —Å–æ–∑–¥–∞–Ω —Å ReportLab!")
        print(f"üìÑ –§–∞–π–ª: {pdf_file}")
        return True
        
    except Exception as e:
        print(f"‚úó –û—à–∏–±–∫–∞: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    
    print("üöÄ –°–æ–∑–¥–∞–Ω–∏–µ PDF —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–∞ AutoML Gluon")
    print("–ê–≤—Ç–æ—Ä: NeoZorK (Shcherbyna Rostyslav)")
    print("–î–∞—Ç–∞: 2025")
    print("–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ: Ukraine, Zaporizhzhya")
    
    # –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã
    success = False
    
    # –°–ø–æ—Å–æ–± 1: pdfkit
    if create_pdf_with_pdfkit():
        success = True
    
    # –°–ø–æ—Å–æ–± 2: ReportLab (–ø—Ä–æ—Å—Ç–æ–π PDF)
    if create_pdf_with_reportlab():
        success = True
    
    if success:
        print("\nüéâ PDF —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
        print("üìÑ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–∞–ø–∫—É docs/automl/gluon/")
    else:
        print("\n‚ö†Ô∏è  –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ PDF –Ω–µ —É–¥–∞–ª–æ—Å—å")
        print("üìã –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä—É—á–Ω–æ–π —Å–ø–æ—Å–æ–± —á–µ—Ä–µ–∑ –±—Ä–∞—É–∑–µ—Ä:")
        print("1. –û—Ç–∫—Ä–æ–π—Ç–µ AutoML_Gluon_Complete_Manual_Enhanced.html –≤ –±—Ä–∞—É–∑–µ—Ä–µ")
        print("2. –ù–∞–∂–º–∏—Ç–µ Cmd+P (Mac) –∏–ª–∏ Ctrl+P (Windows/Linux)")
        print("3. –í—ã–±–µ—Ä–∏—Ç–µ '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–∞–∫ PDF'")
        print("4. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ")

if __name__ == "__main__":
    main()
