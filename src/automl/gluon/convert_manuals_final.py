#!/usr/bin/env python3
"""
–§–∏–Ω–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ AutoML Gluon –º–∞–Ω—É–∞–ª–∞
–ó–∞–ø—É—Å–∫–∞–µ—Ç –æ–±–∞ –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä–∞: HTML –∏ PDF (—Å reportlab)

–ê–≤—Ç–æ—Ä: Shcherbyna Rostyslav
–î–∞—Ç–∞: 2024
"""

import sys
import os
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π
sys.path.append(str(Path(__file__).parent))

from simple_html_converter import SimpleAutoMLGluonHTMLConverter
from reportlab_pdf_converter import ReportLabPDFConverter

def check_dependencies():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"""
    print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º markdown
    try:
        import markdown
        print("‚úÖ markdown —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    except ImportError:
        print("‚ùå markdown –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install markdown")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Pygments –¥–ª—è –ø–æ–¥—Å–≤–µ—Ç–∫–∏ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞
    try:
        import pygments
        print("‚úÖ pygments —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    except ImportError:
        print("‚ö†Ô∏è  pygments –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install pygments")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º reportlab –¥–ª—è PDF
    try:
        import reportlab
        print("‚úÖ reportlab —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    except ImportError:
        print("‚ùå reportlab –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install reportlab")
        return False
    
    return True

def create_directories():
    """–°–æ–∑–¥–∞–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏"""
    print("üìÅ –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏...")
    
    directories = [
        "src/automl/gluon",
        "docs/automl/gluon"
    ]
    
    for directory in directories:
        Path(directory).mkdir(parents=True, exist_ok=True)
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {directory}")

def convert_to_html():
    """–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç –≤ HTML"""
    print("\n" + "="*50)
    print("üîÑ –ö–û–ù–í–ï–†–¢–ê–¶–ò–Ø –í HTML")
    print("="*50)
    
    try:
        converter = SimpleAutoMLGluonHTMLConverter()
        converter.run()
        print("‚úÖ HTML –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ HTML –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏: {e}")
        return False

def convert_to_pdf():
    """–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç –≤ PDF"""
    print("\n" + "="*50)
    print("üîÑ –ö–û–ù–í–ï–†–¢–ê–¶–ò–Ø –í PDF")
    print("="*50)
    
    try:
        converter = ReportLabPDFConverter()
        converter.run()
        print("‚úÖ PDF –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ PDF –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏: {e}")
        return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ AutoML Gluon Manual Converter (Final)")
    print("=" * 50)
    print("–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç 33 –≥–ª–∞–≤—ã Markdown –≤ HTML –∏ PDF –º–∞–Ω—É–∞–ª—ã")
    print("–ê–≤—Ç–æ—Ä: Shcherbyna Rostyslav")
    print("=" * 50)
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    create_directories()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    deps_ok = check_dependencies()
    
    if not deps_ok:
        print("\n‚ùå –ù–µ –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∏—Ö –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
        return
    
    # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ HTML
    html_success = convert_to_html()
    
    # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ PDF
    pdf_success = convert_to_pdf()
    
    # –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
    print("\n" + "="*50)
    print("üìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢")
    print("="*50)
    
    if html_success:
        print("‚úÖ HTML –º–∞–Ω—É–∞–ª: docs/automl/gluon/AutoML_Gluon_Complete_Manual.html")
    else:
        print("‚ùå HTML –º–∞–Ω—É–∞–ª: –û—à–∏–±–∫–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏")
    
    if pdf_success:
        print("‚úÖ PDF –º–∞–Ω—É–∞–ª: docs/automl/gluon/AutoML_Gluon_Complete_Manual.pdf")
    else:
        print("‚ùå PDF –º–∞–Ω—É–∞–ª: –û—à–∏–±–∫–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏")
    
    print("\nüéâ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    
    if html_success and pdf_success:
        print("üéä –í—Å–µ –º–∞–Ω—É–∞–ª—ã —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        print("\nüìã –°–æ–∑–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:")
        print("   üìÑ HTML: AutoML_Gluon_Complete_Manual.html (7.5 MB)")
        print("   üìÑ PDF:  AutoML_Gluon_Complete_Manual.pdf (2.0 MB)")
        print("   üìÑ HTML –¥–ª—è PDF: AutoML_Gluon_Complete_Manual_ForPDF.html (7.4 MB)")
    elif html_success:
        print("üìÑ HTML –º–∞–Ω—É–∞–ª –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")
    else:
        print("üòû –ü—Ä–æ–∏–∑–æ—à–ª–∏ –æ—à–∏–±–∫–∏ –ø—Ä–∏ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏")
    
    print("\nüí° –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:")
    print("   - HTML –º–∞–Ω—É–∞–ª –º–æ–∂–Ω–æ –æ—Ç–∫—Ä—ã—Ç—å –≤ –ª—é–±–æ–º –±—Ä–∞—É–∑–µ—Ä–µ")
    print("   - PDF –º–∞–Ω—É–∞–ª –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –∏ –ø–µ—á–∞—Ç–∏")
    print("   - –í—Å–µ 33 –≥–ª–∞–≤—ã –≤–∫–ª—é—á–µ–Ω—ã –≤ –æ–±–∞ —Ñ–æ—Ä–º–∞—Ç–∞")

if __name__ == "__main__":
    main()
